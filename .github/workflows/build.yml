name: Build
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test:
    name: Test & Analyze code
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Lint & test Kotlin code
        script: ./gradlew clean
          testReleaseUnitTest
          iosSimulatorArm64Test
          desktopTest
          lintRelease
          --build-cache --parallel --continue

      - name: Install sonar cli
        uses: Warchant/setup-sonar-scanner@v8

      - name: SonarQube Cloud Scan
        run: sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  testAndroidInstrumented:
    name: Run Android instrumented tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Lint & test Kotlin code
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          working-directory: ./src
          script: ./gradlew clean connectedAndroidTest

  buildAndroid:
    name: Build Android app
    runs-on: ubuntu-latest
    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Assemble release build
        working-directory: ./src
        run: ./gradlew assembleRelease

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find src/composeApp/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ steps.releaseApk.outputs.apkfile }}