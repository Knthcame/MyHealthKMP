name: Build

permissions:
  checks: write
  pull-requests: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test & Analyze code
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Lint & test Kotlin code
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          working-directory: ./src
          script: ./gradlew clean 
            connectedAndroidTest
            testReleaseUnitTest
            iosSimulatorArm64Test
            desktopTest
            lintRelease
            --build-cache --parallel --continue

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: always()
        with:
          files: |
            **/test-results/**/*.xml
            **/androidTest-results/**/*.xml

      - name: Install sonar cli
        uses: Warchant/setup-sonar-scanner@v8

      - name: SonarQube Cloud Scan
        run: sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  buildAndroid:
    name: Build Android app
    runs-on: ubuntu-latest
    steps:
      - name: Checking out branch
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Assemble release build
        working-directory: ./src
        run: ./gradlew assembleRelease

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find src/composeApp/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ steps.releaseApk.outputs.apkfile }}